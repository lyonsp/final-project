output$mymap <- renderLeaflet({
selectedSchoolLevel <- selectSchoolLevel(input$selectlevel)
leaflet() %>%
addTiles() %>%
fitBounds(min(schoolData$longitude), min(schoolData$latitude),
max(schoolData$longitude), max(schoolData$latitude)) %>%
addCircleMarkers(lng = selectedSchoolLevel$longitude, lat = selectedSchoolLevel$latitude,
color = "red",
fillOpacity = .6,
radius = 5,
stroke = FALSE,
popup = schoolData$School_Name)
})
output$schoolDataChart <- renderPlotly ({
x <- list(
title = "School Names"
)
y <- list(
title = "Number of Students"
)
title <- list(
title = "Number of Students vs Number of Free Lunches"
)
numberOfStudents <- plot_ly(schoolData,
x = School_Name,
y = Total_Students,
name = "Number Of Students",
type = "bar"
)
numberOfFreeLunches <- add_trace(
numberOfStudents,
x = School_Name,
y  = eval(parse(text = input$school_var)),
title = "blah",
xaxis = (title = "hi"),
name = "Number of Percentage"
) %>%
layout(barmode = "stack",
xaxis = x, yaxis = y,
title = "Test",
margin = list("b" = 150))
})
output$comparemap <- renderLeaflet({
selected_call <- choose_call_group(input$choose)
selected_sort <- make_choice(input$whichtype)
percentage <- eval(parse(text = input$whichtype), selected_sort)
leaflet() %>%
addTiles() %>%
fitBounds(min(only_2012$Longitude), min(only_2012$Latitude),
max(only_2012$Longitude), max(only_2012$Latitude)) %>%
addCircleMarkers(lng = selected_call$Longitude, lat = selected_call$Latitude,
radius = 3,
color = "blue",
stroke = FALSE,
fillOpacity = .5,
selected_call) %>%
addCircleMarkers(lng = schoolData$longitude, lat = schoolData$latitude,
radius = percentage * 10,
color = "red",
stroke = FALSE,
fillOpacity = .8,
popup = paste0(schoolData$School_Name, " ", round(percentage * 100, 3), "%"))
})
})
shiny::runApp()
shiny::runApp()
?par
shiny::runApp()
?helpText
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
schoolData <- read.csv("schoolData.csv")
selectSchoolLevel <- function(gradeLevel) {
if(gradeLevel == "all") {
return(schoolData)
} else {
selectedLevel <- schoolData %>% filter(School_Level == gradeLevel)
return(selectedLevel)
}
}
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(plotly)
library(dplyr)
only_2012 <- read.csv("only_2012.csv")
our_only_2012 <- filter(only_2012, grepl("BURGLARY|LIQUOR VIOLATIONS|
ASSAULTS|ROBBERY|NARCOTICS COMPLAINTS|
THREATS, HARASSMENT|HOMICIDE|WEAPONS CALLS|
CAR PROWL|SHOPLIFTING|PROSTITUTION",
Event.Clearance.Group))
select_month <- function(month) {
sorted_our_2012 <- our_only_2012 %>% group_by(Event.Clearance.Group) %>%
filter(grepl(month, Event.Clearance.Date)) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
summary_bar <- plot_ly(sorted_our_2012, type = "bar",
x = c(sorted_our_2012$Event.Clearance.Group),
y = c(sorted_our_2012$total_calls)) %>%
layout(title = "Total Calls per Call Type for Given Month",
xaxis = list(title = "Call Type"),
yaxis = list(title = "Total Calls"),
margin = list("b" = 100)) %>%
return()
}
library(plotly)
library(dplyr)
only_2012 <- read.csv("only_2012.csv")
our_only_2012 <- filter(only_2012, grepl("BURGLARY|LIQUOR VIOLATIONS|
ASSAULTS|ROBBERY|NARCOTICS COMPLAINTS|
THREATS, HARASSMENT|HOMICIDE|WEAPONS CALLS|
CAR PROWL|SHOPLIFTING|PROSTITUTION",
Event.Clearance.Group))
select_month <- function(month) {
sorted_our_2012 <- our_only_2012 %>% group_by(Event.Clearance.Group) %>%
filter(grepl(month, Event.Clearance.Date)) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
summary_bar <- plot_ly(sorted_our_2012, type = "bar",
x = c(sorted_our_2012$Event.Clearance.Group),
y = c(sorted_our_2012$total_calls)) %>%
layout(title = "Total Calls per Call Type for Given Month",
xaxis = list(title = "Call Type"),
yaxis = list(title = "Total Calls"),
margin = list("b" = 100)) %>%
return()
}
library(markdown)
library(plotly)
library(shiny)
library(dplyr)
library(leaflet)
shinyUI(navbarPage("Navbar!",
tabPanel("Intro",
includeMarkdown("testingOut.Rmd")),
tabPanel("911 Calls",
titlePanel("911 Call Data"),
sidebarPanel(helpText("Select specific type of incident."),
selectInput("select", label = "Select Call Type",
choices = list("Burglary" = "BURGLARY",
"Liquor" = "LIQUOR VIOLATIONS",
"Assaults" = "ASSAULTS",
"Robbery" = "ROBBERY",
"Narcotics" = "NARCOTICS COMPLAINTS",
"Threats" = "THREATS, HARASSMENT",
"Homicide" = "HOMICIDE",
"Weapons" = "WEAPONS CALLS",
"Car Prowl" = "CAR PROWL",
"Shoplifting" = "SHOPLIFTING",
"Prostitution" = "PROSTITUTION"))
),
mainPanel("Locations of 911 Calls",
leafletOutput("mymap2"),
br()),
sidebarPanel(helpText("View incidents for a specific month."),
selectInput("selectx", label = "Select Month",
choices = list("Total" = "2012",
"January" = "^01/",
"February" = "^02/",
"March" = "^03/",
"April" = "^04/",
"May" = "^05/",
"June" = "^06/",
"July" = "^07/",
"August" = "^08/",
"September" = "^09/",
"October" = "^10/",
"November" = "^11/",
"December" = "^12/"),
selected = "2012")
),
mainPanel(plotlyOutput("bargraph"))
),
tabPanel("Seattle Schools",
titlePanel("Seattle School Data"),
sidebarPanel(helpText("View schools of chosen level."),
selectInput("selectlevel", label = "Select School Level",
choices = list("All" = "all",
"Elementary School" = "Elementary",
"Middle School" = "Middle School",
"High School" = "High School"))
),
mainPanel("School Locations",
leafletOutput("mymap"),
br()),
sidebarPanel(helpText("View percentages for selected option."),
selectInput("school_var", label = "Percentage Level",
choices = list("Free Lunches" = "Free_Lunches",
"Limited English" = "Limited_English",
"Single Parents" = "One_Parent_Homes"
)
)),
mainPanel(plotlyOutput("schoolDataChart"))
),
tabPanel("Comparison",
titlePanel("911 Call and Seattle School Comparison"),
sidebarPanel(helpText("Select specific type of incident."),
selectInput("choose", label = "Select Call Type",
choices = list("Assaults" = "ASSAULTS",
"Burglary" = "BURGLARY",
"Car Prowl" = "CAR PROWL",
"Homicide" = "HOMICIDE",
"Liquor" = "LIQUOR VIOLATIONS",
"Narcotics" = "NARCOTICS COMPLAINTS",
"Prostitution" = "PROSTITUTION",
"Robbery" = "ROBBERY",
"Shoplifting" = "SHOPLIFTING",
"Threats" = "THREATS, HARASSMENT",
"Weapons" = "WEAPONS CALLS"
)),
helpText("View percentages for selected option."),
selectInput("whichtype", label = "Percentage Level",
choices = list("Free Lunches" = "Percent_Free_Lunch",
"Limited English" = "Percent_Limited_English",
"Single Parents" = "Percent_One_Parent_Homes"),
selected = "free"
)),
mainPanel(leafletOutput("comparemap", height = 800, width = 900))
),
tabPanel("Conclusion")
)
)
shiny::runApp()
library(plotly)
library(dplyr)
#only_2012 <- read.csv("only_2012.csv")
only_2012 <- read.csv("call_info.csv")
our_only_2012 <- filter(only_2012, grepl("BURGLARY|LIQUOR VIOLATIONS|
ASSAULTS|ROBBERY|NARCOTICS COMPLAINTS|
THREATS, HARASSMENT|HOMICIDE|WEAPONS CALLS|
CAR PROWL|SHOPLIFTING|PROSTITUTION",
Event.Clearance.Group))
select_month <- function(month) {
sorted_our_2012 <- our_only_2012 %>% group_by(Event.Clearance.Group) %>%
filter(grepl(month, Event.Clearance.Date)) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
summary_bar <- plot_ly(sorted_our_2012, type = "bar",
x = c(sorted_our_2012$Event.Clearance.Group),
y = c(sorted_our_2012$total_calls)) %>%
layout(title = "Total Calls per Call Type for Given Month",
xaxis = list(title = "Call Type"),
yaxis = list(title = "Total Calls"),
margin = list("b" = 100)) %>%
return()
}
shiny::runApp()
only_2012 <- read.csv("only_2012.csv")
View(only_2012)
only_2012 <- read.csv("only_2012.csv")
View(only_2012)
our_only_2012 <- filter(only_2012, grepl("BURGLARY|LIQUOR VIOLATIONS|
ASSAULTS|ROBBERY|NARCOTICS COMPLAINTS|
THREATS, HARASSMENT|HOMICIDE|WEAPONS CALLS|
CAR PROWL|SHOPLIFTING|PROSTITUTION",
Event.Clearance.Group))
View(our_only_2012)
getwd()
write.csv(our_only_2012, file = "our_only_2012.csv")
our_only_2012 <- filter(only_2012, grepl("BURGLARY|LIQUOR VIOLATIONS|
ASSAULTS|ROBBERY|NARCOTICS COMPLAINTS|
THREATS, HARASSMENT|HOMICIDE|WEAPONS CALLS|
CAR PROWL|SHOPLIFTING|PROSTITUTION",
Event.Clearance.Group))
View(our_only_2012)
sorted_our_2012 <- our_only_2012 %>% group_by(Event.Clearance.Group) %>%
filter(grepl(month, Event.Clearance.Date)) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
View(sorted_our_2012)
our_only_2012 %>% group_by(Event.Clearance.Group)
our_only_2012 %>% group_by(Event.Clearance.Group) %>%
filter(grepl(month, Event.Clearance.Date)) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
View(our_only_2012)
grepl(month, Event.Clearance.Date)
library(plotly)
library(dplyr)
only_2012 <- read.csv("only_2012.csv")
our_only_2012 <- filter(only_2012, grepl("BURGLARY|LIQUOR VIOLATIONS|
ASSAULTS|ROBBERY|NARCOTICS COMPLAINTS|
THREATS, HARASSMENT|HOMICIDE|WEAPONS CALLS|
CAR PROWL|SHOPLIFTING|PROSTITUTION",
Event.Clearance.Group))
select_month <- function(month) {
sorted_our_2012 <- our_only_2012 %>% group_by(Event.Clearance.Group) %>%
filter(grepl(month, Event.Clearance.Date)) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
summary_bar <- plot_ly(sorted_our_2012, type = "bar",
x = c(sorted_our_2012$Event.Clearance.Group),
y = c(sorted_our_2012$total_calls)) %>%
layout(title = "Total Calls per Call Type for Given Month",
xaxis = list(title = "Call Type"),
yaxis = list(title = "Total Calls"),
margin = list("b" = 100)) %>%
return()
}
test <- select_month("January")
View(test)
our_only_2012 %>% group_by(Event.Clearance.Group)
our_only_2012 %>% group_by(Event.Clearance.Group) %>%
filter(grepl(month, Event.Clearance.Date))
our_only_2012 %>% group_by(Event.Clearance.Group) %>%
filter(grepl(month, Event.Clearance.Date)) %>%
summarise(total_calls = n())
total_calls = n()
sorted_our_2012 <- our_only_2012 %>% group_by(Event.Clearance.Group) %>%
filter(grepl(month, Event.Clearance.Date)) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
View(sorted_our_2012)
month <- "January"
library(plotly)
library(dplyr)
only_2012 <- read.csv("only_2012.csv")
our_only_2012 <- filter(only_2012, grepl("BURGLARY|LIQUOR VIOLATIONS|
ASSAULTS|ROBBERY|NARCOTICS COMPLAINTS|
THREATS, HARASSMENT|HOMICIDE|WEAPONS CALLS|
CAR PROWL|SHOPLIFTING|PROSTITUTION",
Event.Clearance.Group))
select_month <- function(month) {
sorted_our_2012 <- our_only_2012 %>% group_by(Event.Clearance.Group) %>%
filter(grepl(month, Event.Clearance.Date)) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
summary_bar <- plot_ly(sorted_our_2012, type = "bar",
x = c(sorted_our_2012$Event.Clearance.Group),
y = c(sorted_our_2012$total_calls)) %>%
layout(title = "Total Calls per Call Type for Given Month",
xaxis = list(title = "Call Type"),
yaxis = list(title = "Total Calls"),
margin = list("b" = 100)) %>%
return()
}
shiny::runApp()
select_month("^01/")
test <- select_month("^01/")
View(test)
month <- "^01/"
grepl(month, Event.Clearance.Date)
sorted_our_2012 <- our_only_2012 %>% group_by(Event.Clearance.Group) %>%
filter(grepl(month, Event.Clearance.Date)) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
View(sorted_our_2012)
View(our_only_2012)
sorted_our_2012 <- our_only_2012 %>% group_by(Event.Clearance.Group) %>%
filter(grepl(month, Event.Clearance.Date)) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
View(sorted_our_2012)
our_only_2012 <- filter(only_2012, grepl("BURGLARY|LIQUOR VIOLATIONS|
ASSAULTS|ROBBERY|NARCOTICS COMPLAINTS|
THREATS, HARASSMENT|HOMICIDE|WEAPONS CALLS|
CAR PROWL|SHOPLIFTING|PROSTITUTION",
Event.Clearance.Group))
View(our_only_2012)
?group_by
sorted_our_2012 <- group_by(our_only_2012$Event.Clearance.Group) %>%
filter(grepl(month, Event.Clearance.Date)) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
our_only_2012 %>% group_by(Event.Clearance.Group)
our_only_2012 %>% group_by(Event.Clearance.Group) %>%
filter(grepl(month, Event.Clearance.Date))
sorted_our_2012 <- our_only_2012 %>% group_by(Event.Clearance.Group) %>%
#filter(grepl(month, Event.Clearance.Date)) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
View(sorted_our_2012)
?grepl
sorted_our_2012 <- our_only_2012 %>% group_by(Event.Clearance.Group) %>%
filter(grepl(month, Event.Clearance.Date)) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
View(sorted_our_2012)
month
month <- "01"
sorted_our_2012 <- our_only_2012 %>% group_by(Event.Clearance.Group) %>%
filter(grepl(month, Event.Clearance.Date)) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
View(sorted_our_2012)
month <- "^01/"
sorted_our_2012 <- our_only_2012 %>% group_by(Event.Clearance.Group) %>%
filter(grepl(month, Event.Clearance.Date)) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
View(sorted_our_2012)
month <- "01"
sorted_our_2012 <- our_only_2012 %>% group_by(Event.Clearance.Group) %>%
filter(grepl(month, Event.Clearance.Date)) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
View(sorted_our_2012)
shiny::runApp()
shiny::runApp()
month <- "01"
sorted_our_2012 <- our_only_2012 %>% group_by(Event.Clearance.Group) %>%
filter(grepl(month, Event.Clearance.Date)) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
View(sorted_our_2012)
shiny::runApp()
only_2012 <- read.csv("only_2012.csv")
View(only_2012)
our_only_2012 <- filter(only_2012, grepl("BURGLARY|LIQUOR VIOLATIONS|
ASSAULTS|ROBBERY|NARCOTICS COMPLAINTS|
THREATS, HARASSMENT|HOMICIDE|WEAPONS CALLS|
CAR PROWL|SHOPLIFTING|PROSTITUTION",
Event.Clearance.Group))
View(our_only_2012)
library(plotly)
library(dplyr)
only_2012 <- read.csv("only_2012.csv")
our_only_2012 <- filter(only_2012, grepl("BURGLARY|LIQUOR VIOLATIONS|
ASSAULTS|ROBBERY|NARCOTICS COMPLAINTS|
THREATS, HARASSMENT|HOMICIDE|WEAPONS CALLS|
CAR PROWL|SHOPLIFTING|PROSTITUTION",
Event.Clearance.Group))
select_month <- function(month) {
sorted_our_2012 <- our_only_2012 %>% filter(grepl(month, Event.Clearance.Date)) %>%
group_by(Event.Clearance.Group) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
summary_bar <- plot_ly(sorted_our_2012, type = "bar",
x = c(sorted_our_2012$Event.Clearance.Group),
y = c(sorted_our_2012$total_calls)) %>%
layout(title = "Total Calls per Call Type for Given Month",
xaxis = list(title = "Call Type"),
yaxis = list(title = "Total Calls"),
margin = list("b" = 100)) %>%
return()
}
shiny::runApp()
month <- "01"
sorted_our_2012 <- our_only_2012 %>% filter(grepl(month, Event.Clearance.Date))
View(sorted_our_2012)
month <- "^01/"
sorted_our_2012 <- our_only_2012 %>% filter(grepl(month, Event.Clearance.Date))
View(sorted_our_2012)
month <- "01/"
View(sorted_our_2012)
sorted_our_2012 <- our_only_2012 %>% filter(grepl(month, Event.Clearance.Date))
sorted_our_2012 <- our_only_2012 %>% filter(grepl(month, our_only_2012$Event.Clearance.Date))
View(our_only_2012)
month <- "01/"
sorted_our_2012 <- our_only_2012 %>% filter(grepl(month, Event.Clearance.Date))
View(sorted_our_2012)
sorted_our_2012 <- our_only_2012 %>% filter(grepl_("month", Event.Clearance.Date))
sorted_our_2012 <- our_only_2012 %>% filter(grepl(month, Event.Clearance.Date))
library(plotly)
library(dplyr)
only_2012 <- read.csv("only_2012.csv")
our_only_2012 <- filter(only_2012, grepl("BURGLARY|LIQUOR VIOLATIONS|
ASSAULTS|ROBBERY|NARCOTICS COMPLAINTS|
THREATS, HARASSMENT|HOMICIDE|WEAPONS CALLS|
CAR PROWL|SHOPLIFTING|PROSTITUTION",
Event.Clearance.Group))
select_month <- function(month) {
sorted_our_2012 <- our_only_2012 %>% filter(grepl(month, Event.Clearance.Date)) %>%
group_by(Event.Clearance.Group) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
summary_bar <- plot_ly(sorted_our_2012, type = "bar",
x = c(sorted_our_2012$Event.Clearance.Group),
y = c(sorted_our_2012$total_calls)) %>%
layout(title = "Total Calls per Call Type for Given Month",
xaxis = list(title = "Call Type"),
yaxis = list(title = "Total Calls"),
margin = list("b" = 100)) %>%
return()
}
library(plotly)
library(dplyr)
only_2012 <- read.csv("only_2012.csv")
our_only_2012 <- filter(only_2012, grepl("BURGLARY|LIQUOR VIOLATIONS|
ASSAULTS|ROBBERY|NARCOTICS COMPLAINTS|
THREATS, HARASSMENT|HOMICIDE|WEAPONS CALLS|
CAR PROWL|SHOPLIFTING|PROSTITUTION",
Event.Clearance.Group))
select_month <- function(month) {
sorted_our_2012 <-  filter(our_only_2012, grepl(month, Event.Clearance.Date)) %>%
group_by(Event.Clearance.Group) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
summary_bar <- plot_ly(sorted_our_2012, type = "bar",
x = c(sorted_our_2012$Event.Clearance.Group),
y = c(sorted_our_2012$total_calls)) %>%
layout(title = "Total Calls per Call Type for Given Month",
xaxis = list(title = "Call Type"),
yaxis = list(title = "Total Calls"),
margin = list("b" = 100)) %>%
return()
}
month
sorted_our_2012 <-  filter(our_only_2012, grepl(month, Event.Clearance.Date))
View(sorted_our_2012)
library(plotly)
library(dplyr)
#only_2012 <- read.csv("only_2012.csv")
our_only_2012 <- filter(only_2012, grepl("BURGLARY|LIQUOR VIOLATIONS|
ASSAULTS|ROBBERY|NARCOTICS COMPLAINTS|
THREATS, HARASSMENT|HOMICIDE|WEAPONS CALLS|
CAR PROWL|SHOPLIFTING|PROSTITUTION",
Event.Clearance.Group))
select_month <- function(month) {
sorted_our_2012 <- our_only_2012 %>% filter(grepl(month, Event.Clearance.Date)) %>%
group_by(Event.Clearance.Group) %>%
summarise(total_calls = n()) %>% arrange(desc(total_calls))
summary_bar <- plot_ly(sorted_our_2012, type = "bar",
x = c(sorted_our_2012$Event.Clearance.Group),
y = c(sorted_our_2012$total_calls)) %>%
layout(title = "Total Calls per Call Type for Given Month",
xaxis = list(title = "Call Type"),
yaxis = list(title = "Total Calls"),
margin = list("b" = 100)) %>%
return()
}
shiny::runApp()
